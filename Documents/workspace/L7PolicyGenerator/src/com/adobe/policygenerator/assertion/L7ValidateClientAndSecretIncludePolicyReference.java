package com.adobe.policygenerator.assertion;

import com.adobe.policygenerator.service.L7JSonPassThroughService.IL7OBJECT;

public class L7ValidateClientAndSecretIncludePolicyReference implements IL7OBJECT {

	@Override
	public String toL7XML() {
		
		StringBuffer l7XMLBuffer = new StringBuffer("");
		return l7XMLBuffer.toString();
		
/*		l7XMLBuffer.append("<IncludedPolicyReference RefType=\"com.l7tech.console.policy.exporter.IncludedPolicyReference\" guid=\"8e2186bb-02c4-42aa-bf46-426e1ad5636e\" included=\"true\" name=\"validateClientAndSecretKey\" soap=\"false\" type=\"INCLUDE_FRAGMENT\">");
		l7XMLBuffer.append("<wsp:Policy xmlns:L7p=\"http://www.layer7tech.com/ws/policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2002/12/policy\">");
		l7XMLBuffer.append("<wsp:All wsp:Usage=\"Required\">");
		l7XMLBuffer.append("l7XMLBuffer.append(\"<L7p:AuditDetailAssertion\">");
		l7XMLBuffer.append("<L7p:Detail stringValue=\"Policy Fragment: validateClientAndSecretKey\"/>");
		l7XMLBuffer.append("</L7p:AuditDetailAssertion\">");
		l7XMLBuffer.append("<L7p:CustomizeErrorResponse\">");
		l7XMLBuffer.append("<L7p:Content stringValue=\"Authorization Failed\"/>");
		l7XMLBuffer.append("<L7p:ContentType stringValue=\"${request.http.header.content-type}; charset=UTF-8\"/>");
		l7XMLBuffer.append("<L7p:ExtraHeaders nameValuePairArray=\"included\"/>");
		l7XMLBuffer.append("<L7p:HttpStatus stringValue=\"401\"/>");
		l7XMLBuffer.append("</L7p:CustomizeErrorResponse\">");
		l7XMLBuffer.append("<wsp:OneOrMore wsp:Usage=\"Required\">");
		l7XMLBuffer.append("<wsp:All wsp:Usage=\"Required\">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion>");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue=\"false\"/>");
		l7XMLBuffer.append("<L7p:Expression1 stringValue=\"${request.http.header.api_key}\"/>");
		l7XMLBuffer.append("<L7p:Expression2 stringValue=\"\"/>");
		l7XMLBuffer.append("<L7p:Negate booleanValue=\"true\"/>");
		l7XMLBuffer.append("<L7p:Operator operator=\"EMPTY\"/>");
		l7XMLBuffer.append("<L7p:Predicates predicates=\"included\">");
		l7XMLBuffer.append("<L7p:item binary=\"included\">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue=\"false\"/>");
		l7XMLBuffer.append("<L7p:Negated booleanValue=\"true\"/>");
		l7XMLBuffer.append("<L7p:Operator operator=\"EMPTY\"/>");
		l7XMLBuffer.append("<L7p:RightValue stringValue=\"\"/>");
		l7XMLBuffer.append("</L7p:item>");
		l7XMLBuffer.append("</L7p:Predicates>");
		l7XMLBuffer.append("</L7p:ComparisonAssertion>");
		l7XMLBuffer.append("<L7p:ComparisonAssertion>");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue=\"false\"/>");
		l7XMLBuffer.append("<L7p:Expression1 stringValue=\"${request.http.header.secret_key}\"/>");
		l7XMLBuffer.append("<L7p:Expression2 stringValue=\"\"/>");
		l7XMLBuffer.append("<L7p:Negate booleanValue=\"true\"/>");
		l7XMLBuffer.append("<L7p:Operator operator=\"EMPTY\"/>");
		l7XMLBuffer.append("<L7p:Predicates predicates=\"included\">");
		l7XMLBuffer.append("<L7p:item binary=\"included\">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue=\"false\"/>");
		l7XMLBuffer.append("<L7p:Negated booleanValue=\"true\"/>");
		l7XMLBuffer.append("<L7p:Operator operator=\"EMPTY\"/>");
		l7XMLBuffer.append("<L7p:RightValue stringValue=\"\"/>");
		l7XMLBuffer.append("</L7p:item>");
		l7XMLBuffer.append("</L7p:Predicates>");
		l7XMLBuffer.append("</L7p:ComparisonAssertion>");
		l7XMLBuffer.append("<L7p:SetVariable>");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue=\"JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLmFwaV9rZXl9\"/>");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue=\"lookupApiKey\"/>");
		l7XMLBuffer.append("</L7p:SetVariable>");
		l7XMLBuffer.append("<L7p:SetVariable>");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue=\"JHtyZXF1ZXN0Lmh0dHAuaGVhZGVyLnNlY3JldF9rZXl9\"/>");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue=\"secretKey\"/>");
	//	l7XMLBuffer.append("</L7p:SetVariable">");
		l7XMLBuffer.append("<wsp:All wsp:Usage=\"Required\">");
		l7XMLBuffer.append("<wsp:OneOrMore wsp:Usage=\"Required\">");
		l7XMLBuffer.append("<wsp:All wsp:Usage=\"Required\">");
		l7XMLBuffer.append("<L7p:CacheLookup>");
		l7XMLBuffer.append("<L7p:CacheEntryKey stringValue=\"${lookupApiKey}\"/>");
		l7XMLBuffer.append("<L7p:CacheId stringValue=\"consumerSecretCache\"/>");
		l7XMLBuffer.append("<L7p:ContentTypeOverride stringValue=\"\"/>");
		l7XMLBuffer.append("<L7p:MaxEntryAgeMillis longValue=\"30000\"/>");
		l7XMLBuffer.append("<L7p:OtherTargetMessageVariable stringValue=\"consumerKeyValues\"/>");
		l7XMLBuffer.append("<L7p:Target target=\"OTHER\"/>");
		l7XMLBuffer.append("</L7p:CacheLookup>");
		l7XMLBuffer.append("<L7p:ComparisonAssertion>");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue=\"false/>");
		l7XMLBuffer.append("<L7p:Expression1 stringValue=\"${consumerKeyValues.mainpart}\"/>");
		l7XMLBuffer.append("<L7p:Expression2 stringValue=\"\"/>");
		l7XMLBuffer.append("<L7p:Negate booleanValue=\"true\"/>");
		l7XMLBuffer.append("<L7p:Operator operator=\"EMPTY\"/>");
		l7XMLBuffer.append("<L7p:Predicates predicates=\"included\">");
		l7XMLBuffer.append("<L7p:item binary=\"included\">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue=\"false\"/>");
		l7XMLBuffer.append("<L7p:Negated booleanValue=\"true\"/>");
		l7XMLBuffer.append("<L7p:Operator operator=\"EMPTY\"/>");
		l7XMLBuffer.append("<L7p:RightValue stringValue=\"\"/>");
		l7XMLBuffer.append("</L7p:item>");
		l7XMLBuffer.append("</L7p:Predicates>");
		l7XMLBuffer.append("</L7p:ComparisonAssertion>");
		l7XMLBuffer.append("<L7p:assertionComment>");
		l7XMLBuffer.append("<L7p:Properties mapValue=\"included\">");
		l7XMLBuffer.append("<L7p:entry>");
		l7XMLBuffer.append("<L7p:key stringValue=\"RIGHT.COMMENT\"/>");
		l7XMLBuffer.append("<L7p:value stringValue=\"Look in cache for client_key values\"/>");
		l7XMLBuffer.append("</L7p:entry>");
		l7XMLBuffer.append("</L7p:Properties>");
		l7XMLBuffer.append("</L7p:assertionComment>");
		</wsp:All">");
		<wsp:All wsp:Usage="Required"">");
		l7XMLBuffer.append("<L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:Detail stringValue="service.oid : ${service.oid}"/">");
		</L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:LookupApiKey">");
		l7XMLBuffer.append("<L7p:ApiKey stringValue="${lookupApiKey}"/">");
		l7XMLBuffer.append("<L7p:ServiceId stringValue="${portal.managed.service.apiId}"/">");
		</L7p:LookupApiKey">");
		l7XMLBuffer.append("<L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:Detail stringValueReference="inline"">");
		<![CDATA[
		FOUND IN LOOKUP API Policy Fragment: validateClientAndSecretKey API KEY FOUND : ${apiKeyRecord.found} API KEY : ${apiKeyRecord.key} API KEY SERVICE : ${apiKeyRecord.service}
		]]">");
		</L7p:Detail">");
		</L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:Detail stringValueReference="inline"">");
		<![CDATA[
		Policy Fragment : validateClientAndSecretKey API Key XML : ${apiKeyRecord.xml}
		]]">");
		</L7p:Detail">");
		l7XMLBuffer.append("<L7p:Enabled booleanValue="false"/">");
		</L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${apiKeyRecord.found}"/">");
		l7XMLBuffer.append("<L7p:Operator operatorNull="null"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item dataType="included"">");
		l7XMLBuffer.append("<L7p:Type variableDataType="string"/">");
		</L7p:item">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="true"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${apiKeyRecord.service}"/">");
		l7XMLBuffer.append("<L7p:Operator operatorNull="null"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item dataType="included"">");
		l7XMLBuffer.append("<L7p:Type variableDataType="string"/">");
		</L7p:item">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="${portal.managed.service.apiId}"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${apiKeyRecord.status}"/">");
		l7XMLBuffer.append("<L7p:Operator operatorNull="null"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item dataType="included"">");
		l7XMLBuffer.append("<L7p:Type variableDataType="string"/">");
		</L7p:item">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="active"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${apiKeyRecord.secret}"/">");
		l7XMLBuffer.append("<L7p:Expression2 stringValue="${secretKey}"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="${secretKey}"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue="JHthcGlLZXlSZWNvcmQueG1sfQ=="/">");
		l7XMLBuffer.append("<L7p:ContentType stringValue="text/xml; charset=utf-8"/">");
		l7XMLBuffer.append("<L7p:DataType variableDataType="message"/">");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue="consumerKeyValues"/">");
		</L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue="JHthcGlLZXlSZWNvcmQubGFiZWx9"/">");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue="apiClientName"/">");
		</L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:CacheStorage">");
		l7XMLBuffer.append("<L7p:CacheEntryKey stringValue="${lookupApiKey}"/">");
		l7XMLBuffer.append("<L7p:CacheId stringValue="consumerSecretCache"/">");
		l7XMLBuffer.append("<L7p:MaxEntries intValue="1000"/">");
		l7XMLBuffer.append("<L7p:MaxEntryAgeMillis longValue="30000"/">");
		l7XMLBuffer.append("<L7p:OtherTargetMessageVariable stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:Target target="OTHER"/">");
		</L7p:CacheStorage">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="RIGHT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="// success - API key found"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:All">");
		<wsp:All wsp:Usage="Required"">");
		l7XMLBuffer.append("<L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:Detail stringValue="SEARCHING IN OAUTH MANAGER"/">");
		</L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue="Y2xpZW50X2tleT0ke2xvb2t1cEFwaUtleX0="/">");
		l7XMLBuffer.append("<L7p:ContentType stringValue="application/x-www-form-urlencoded"/">");
		l7XMLBuffer.append("<L7p:DataType variableDataType="message"/">");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue="params"/">");
		</L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:HttpRoutingAssertion">");
		l7XMLBuffer.append("<L7p:ProtectedServiceUrl stringValue="${gateway.oauth_clientstore_server}/oauth/clientstore/getKey"/">");
		l7XMLBuffer.append("<L7p:ProxyPassword stringValueNull="null"/">");
		l7XMLBuffer.append("<L7p:ProxyUsername stringValueNull="null"/">");
		l7XMLBuffer.append("<L7p:RequestHeaderRules httpPassthroughRuleSet="included"">");
		l7XMLBuffer.append("<L7p:Rules httpPassthroughRules="included"/">");
		</L7p:RequestHeaderRules">");
		l7XMLBuffer.append("<L7p:RequestMsgSrc stringValue="params"/">");
		l7XMLBuffer.append("<L7p:RequestParamRules httpPassthroughRuleSet="included"">");
		l7XMLBuffer.append("<L7p:Rules httpPassthroughRules="included"/">");
		</L7p:RequestParamRules">");
		l7XMLBuffer.append("<L7p:ResponseHeaderRules httpPassthroughRuleSet="included"">");
		l7XMLBuffer.append("<L7p:Rules httpPassthroughRules="included"/">");
		</L7p:ResponseHeaderRules">");
		l7XMLBuffer.append("<L7p:ResponseMsgDest stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:SamlAssertionVersion intValue="2"/">");
		</L7p:HttpRoutingAssertion">");
		l7XMLBuffer.append("<L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue="JHtjb25zdW1lcktleVZhbHVlcy5tYWlucGFydH0="/">");
		l7XMLBuffer.append("<L7p:ContentType stringValue="text/xml; charset=utf-8"/">");
		l7XMLBuffer.append("<L7p:DataType variableDataType="message"/">");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue="consumerKeyValues"/">");
		</L7p:SetVariable">");
		<wsp:All wsp:Usage="Required"">");
		l7XMLBuffer.append("<L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:VariablePrefix stringValue="clientSecret"/">");
		l7XMLBuffer.append("<L7p:XmlMsgSrc stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:XpathExpression xpathExpressionValue="included"">");
		l7XMLBuffer.append("<L7p:Expression stringValue="/values/value/secret/text()"/">");
		l7XMLBuffer.append("<L7p:Namespaces mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="s"/">");
		l7XMLBuffer.append("<L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/">");
		</L7p:entry">");
		</L7p:Namespaces">");
		</L7p:XpathExpression">");
		</L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:VariablePrefix stringValue="clientExpiration"/">");
		l7XMLBuffer.append("<L7p:XmlMsgSrc stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:XpathExpression xpathExpressionValue="included"">");
		l7XMLBuffer.append("<L7p:Expression stringValue="/values/value/expiration/text()"/">");
		l7XMLBuffer.append("<L7p:Namespaces mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="s"/">");
		l7XMLBuffer.append("<L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/">");
		</L7p:entry">");
		</L7p:Namespaces">");
		</L7p:XpathExpression">");
		</L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:VariablePrefix stringValue="clientStatus"/">");
		l7XMLBuffer.append("<L7p:XmlMsgSrc stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:XpathExpression xpathExpressionValue="included"">");
		l7XMLBuffer.append("<L7p:Expression stringValue="/values/value/status/text()"/">");
		l7XMLBuffer.append("<L7p:Namespaces mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="s"/">");
		l7XMLBuffer.append("<L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/">");
		</L7p:entry">");
		</L7p:Namespaces">");
		</L7p:XpathExpression">");
		</L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:VariablePrefix stringValue="clientName"/">");
		l7XMLBuffer.append("<L7p:XmlMsgSrc stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:XpathExpression xpathExpressionValue="included"">");
		l7XMLBuffer.append("<L7p:Expression stringValue="/values/value/client_name/text()"/">");
		l7XMLBuffer.append("<L7p:Namespaces mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="s"/">");
		l7XMLBuffer.append("<L7p:value stringValue="http://schemas.xmlsoap.org/soap/envelope/"/">");
		</L7p:entry">");
		</L7p:Namespaces">");
		</L7p:XpathExpression">");
		</L7p:ResponseXpathAssertion">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${clientStatus.result}"/">");
		l7XMLBuffer.append("<L7p:Expression2 stringValue="ENABLED"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="ENABLED"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		<wsp:OneOrMore wsp:Usage="Required"">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${clientExpiration.result}"/">");
		l7XMLBuffer.append("<L7p:Expression2 stringValue="0"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="0"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${now.ms}"/">");
		l7XMLBuffer.append("<L7p:Expression2 stringValue="${clientExpiration.result}"/">");
		l7XMLBuffer.append("<L7p:Operator operator="LE"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:CaseSensitive booleanValue="false"/">");
		l7XMLBuffer.append("<L7p:Operator operator="LE"/">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="${clientExpiration.result}"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="RIGHT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="check expiration date"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:OneOrMore">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="RIGHT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="Validate client_key values"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:All">");
		l7XMLBuffer.append("<L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:Detail stringValueReference="inline"">");
		<![CDATA[
		Policy Fragment: validateClientAndSecretKey Consumer Values : ${consumerKeyValues.mainpart}
		]]">");
		</L7p:Detail">");
		</L7p:AuditDetailAssertion">");
		l7XMLBuffer.append("<L7p:CacheStorage">");
		l7XMLBuffer.append("<L7p:CacheEntryKey stringValue="${lookupApiKey}"/">");
		l7XMLBuffer.append("<L7p:CacheId stringValue="consumerSecretCache"/">");
		l7XMLBuffer.append("<L7p:MaxEntries intValue="1000"/">");
		l7XMLBuffer.append("<L7p:MaxEntryAgeMillis longValue="30000"/">");
		l7XMLBuffer.append("<L7p:OtherTargetMessageVariable stringValue="consumerKeyValues"/">");
		l7XMLBuffer.append("<L7p:Target target="OTHER"/">");
		</L7p:CacheStorage">");
		l7XMLBuffer.append("<L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:Base64Expression stringValue="JHtjbGllbnRTZWNyZXQucmVzdWx0fQ=="/">");
		l7XMLBuffer.append("<L7p:VariableToSet stringValue="secrets"/">");
		</L7p:SetVariable">");
		l7XMLBuffer.append("<L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:Expression1 stringValue="${clientSecret.result}"/">");
		l7XMLBuffer.append("<L7p:Expression2 stringValue="${secretKey}"/">");
		l7XMLBuffer.append("<L7p:Predicates predicates="included"">");
		l7XMLBuffer.append("<L7p:item binary="included"">");
		l7XMLBuffer.append("<L7p:RightValue stringValue="${secretKey}"/">");
		</L7p:item">");
		</L7p:Predicates">");
		</L7p:ComparisonAssertion">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="RIGHT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="Look at client_store"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:All">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="RIGHT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="Get the client_key values"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:OneOrMore">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="RIGHT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="Find the consumer_key_secret and validate values"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:All">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="LEFT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="Validate API Keys"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:All">");
		<wsp:All wsp:Usage="Required"">");
		l7XMLBuffer.append("<L7p:FalseAssertion/">");
		l7XMLBuffer.append("<L7p:assertionComment">");
		l7XMLBuffer.append("<L7p:Properties mapValue="included"">");
		l7XMLBuffer.append("<L7p:entry">");
		l7XMLBuffer.append("<L7p:key stringValue="LEFT.COMMENT"/">");
		l7XMLBuffer.append("<L7p:value stringValue="Throw Error for Now"/">");
		</L7p:entry">");
		</L7p:Properties">");
		</L7p:assertionComment">");
		</wsp:All">");
		</wsp:OneOrMore">");
		</wsp:All">");
		</wsp:Policy">");
		</IncludedPolicyReference">");
		
		
		return null;*/
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
